#!/bin/bash

set -euo pipefail

# this is the generate_index script
# you shouldn't have to edit this script

# Variables
KERNEL_RELEASE=$(uname -r)
OS_NAME=$(grep '^PRETTY_NAME' /etc/os-release | cut -d '=' -f2 | tr -d '"')
DATE=$(date +"%d/%m/%Y")
PACKAGE_COUNT=$(pacman -Q | wc -l)
OUTPUT_DIR="/var/lib/webgen/HTML"
OUTPUT_FILE="$OUTPUT_DIR/index.html"

MEMORY_INFO=$(free -m)
DISK_INFO=$(df -h | head -n 4)

# Ensure the target directory exists
if [[ ! -d "$OUTPUT_DIR" ]]; then
        echo "Error: Failed to create or access directory $OUTPUT_DIR." >&2
        exit 1
fi

# Create the index.html file
cat <<EOF > "$OUTPUT_FILE"
<!DOCTYPE html>
<html lang="en">
<head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>System Information</title>
</head>
<body>
        <h1>System Information</h1>
        <p><strong>Kernel Release:</strong> $KERNEL_RELEASE</p>
        <p><strong>Operating System:</strong> $OS_NAME</p>
        <p><strong>Date:</strong> $DATE</p>
        <p><strong>Number of Installed Packages:</strong> $PACKAGE_COUNT</p>
EOF

# add MEMORY_INFO table
cat <<EOF >> "$OUTPUT_FILE"
        <h2>Memory Information</h2>
        <table border="1" style="border-collapse: collapse">
        <tr>
            <th>Total</th>
            <th>Used</th>
            <th>Free</th>
            <th>Shared</th>
            <th>Buff/Cache</th>
            <th>Available</th>
        </tr>
EOF

echo "$MEMORY_INFO" | awk 'NR==2 {
        print "         <tr>"
        print "                 <td>" $2 " MB</td>"
        print "                 <td>" $3 " MB</td>"
        print "                 <td>" $4 " MB</td>"
        print "                 <td>" $5 " MB</td>"
        print "                 <td>" $6 " MB</td>"
        print "                 <td>" $7 " MB</td>"
        print "         </tr>"
        print " </table>"
}' >> "$OUTPUT_FILE"

# add DISK_INFO table
cat <<EOF >> "$OUTPUT_FILE"
        <h2>Disk Usage</h2>
        <table border="1" style="border-collapse: collapse">
        <tr>
                <th>Filesystem</th>
                <th>Size</th>
                <th>Used</th>
                <th>Available</th>
                <th>Use%</th>
                <th>Mounted On</th>
        </tr>
EOF

echo "$DISK_INFO" | awk 'NR>1 {
        print " <tr>"
        print "                 <td>" $1 "</td>"
        print "                 <td>" $2 "</td>"
        print "                 <td>" $3 "</td>"
        print "                 <td>" $4 "</td>"
        print "                 <td>" $5 "</td>"
        print "                 <td>" $6 "</td>"
        print " </tr>"
}' >> "$OUTPUT_FILE"

# add the closing tag of bod and html
cat <<EOF >> "$OUTPUT_FILE"
        </table>
</body>
</html>
EOF

# Check if the file was created successfully
if [ $? -eq 0 ]; then
        echo "Success: File created at $OUTPUT_FILE."
else
        echo "Error: Failed to create the file at $OUTPUT_FILE." >&2
        exit 1
fi